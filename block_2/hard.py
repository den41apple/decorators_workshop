"""
1. Перенесите глобальный счетчик на уровень объемлющей функции. Будет ли работать наш код?
   Если да, то как поменялся смысл написанного кода? Если нет, то что надо изменить, чтобы всё заработало?
"""
from typing import Callable

calls_cnt: int  # Количество запусков функции суммирования


def return_function() -> Callable:
    global calls_cnt  # Без global мы не можем добраться до переменной чтоб её отобразить
    # Либо 2-й вариант работать через аттрибут функции
    return_function.calls_cnt = calls_cnt = 0  # Количество запусков функции суммирования

    def count_function_calls() -> int:
        """
        Подсчитывает кол-во запусков функции суммирования
        """
        global calls_cnt
        calls_cnt += 1
        return_function.calls_cnt = calls_cnt
        return calls_cnt

    return count_function_calls


if __name__ == '__main__':
    func = return_function()
    for i in range(10):
        func()
        print(f"Произошло {calls_cnt} запуска(ов) функции")
        print(f"{return_function.calls_cnt} запуска(ов) функции в аттрибуте")
        print()

    """
    Что бы все заработало, необходимо:
        - Вынести переменную из локальной области видимости в глобальную
        - Либо пользоваться атрибутом функции, в этом случае нет необходимости прописывать глобальную переменную
          в самом модуле вместе что требует оператор global используемый внутри функции
    """
